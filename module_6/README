Цель этого проекта построить рекомендательную систему для определения какие покупки понравятся
или не понравятся определенному покупателю. Для построения этой системы использовались собранные
данные с сайта Амазон. Предоставленные данные включают в себя информацию о покупателе и его / ее покупки.
В данных имеется категория товара, стоимость, количество звезд, ранг в системе Амазона, год и месяц покупки,
количество отзывов, вес товара, покупка была верифицированной или нет, марка товара, целевая переменная остался
покупатель доволен или не доволен совершенной покупкой.

В предоставленных данных имелись пропуски, которые были заполнены. Также были предоставленные признаки
в которых было сильно много пропусков (как картинки товаров) эти признаки не были использованы в построение
модели.

Анализ данных показал что между числовыми признаками и целевой переменной практически отсутствует корреляция.
Самая заметная корреляция обнаружена была между количеством звезд и рангом. В принципе понятно почему, на Амазоне 
чем меньше ранг тем товар считается популярней и лучше в их списке. Есть небольшая корреляция между количеством звезд 
и количеством оставленных отзывов. Большинство товаров не дорогие. Их стоимость в данной выборки от 10 до 20 долларов.
Вес товаров из выборки тоже не большой. В выборки очень сильно прослеживается, что чем больше у конкретного товара отзывов
тем больше раз из этой выборки его покупали. Хорошо видно, что продукты с более низким рангом популярней в этой выборки.
Их заметно чаще покупают. Разница между распределением ранга по всем покупкам выборки
и распределению по уникальным товаром еще ярче это выражае

Распределение по годам в этой выборки показала что чем раньше тем меньше покупок было совершенной в этой выборки.
Это еще может говорить, что в начале двухтысячных онлайн заказы делали на много реже и этот сайт был менее 
популярным. По месяцам я ничего особенного не заметил на глаз.

Категориальный признак 'verified' показывает, что верифицированные покупки в среднем имеют более низкий ранг товара.
Признак 'verified' имеет статистически значимые различия по целевой переменной. Также признак 'userid' и признак 
содержащий айди товара 'asin' имеют статистически значимые различия по целевой переменной. Признак 'brand' и признак
'cat1' первый уровень категорий товаров имеют статистически значимые различия по целевой переменной. Когда признак 'rating'
я представил в виде категориального признака и провел тест на различия статистической значимости по числовым признакам,
то целевая переменная  'rating'  не имела статистически значимые различия по цене 'price'.

Новые признаки были созданы где посчитана среднестатистический ранг по категориям и количеству звезд. Еще признак был 
создан средне статистическое количество звезд у каждого брэнда. Среднестатистический рейтинг у каждого товара. 
Среднестатистический рейтинг оставляемый покупателем.

Перед построением конечной модели, были проведены эксперименты с библиотекой surprice. Модели из той библиотеки
давали плохой результат или вообще не хватало памяти на kaggle для них. Хотелось поэкспериментировать с построением
векторов и косинусной дистанции между продуктами, но на это тоже памяти не хватило. 

Одна из целей этого проекта это обойти проблему холодного старта, когда появляется новый клиент, которому
ты не знаешь что предложить. Он ничего до этого не покупал. Оценок никаких не ставил. Для новых клиентов
чисто Коллаборативная рекомендательная система не подойдет. Чтоб решить эту проблему, нужно учесть какую-то 
информацию о новом клиенте и информацию о товарах. Для учета этих признаков рекомендательная система
должна полностью быть Feature Content Based или она должна быть гибридной.

Многие современные рекомендательные системы гибридны. Они построены используя комбинации разных 
рекомендательных алгоритмов, регрессии, нейросеть. В этом проекты была построена Weighted Hybrid Recommendation System.
Эта рекомендательная система складывает результаты разных алгоритмов. У результатов разных алгоритмов разные веса, поэтому
они не одинаково влияют на конечный результат. В данной модели для получения конечного предсказания были использована
две модели из библиотеки lightfm. Одна модель полностью коллаборативная, а другая гибридная. Третья модель регрессионная.
Она была построена используя библиотеку lightgbm.

