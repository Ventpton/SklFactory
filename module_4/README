Задача этого проекта создать модель, которое будет, как можно лучше определять, кому стоит давать кредит,
а кому нет. Изначально дается ряд признаков и целевой признак 'default'. Где 0 обозначает кому стоит дать кредит,
1 кому не стоит. Задача классификация, модель должна подающих на кредит распределять по двум классам. Соотношение
классов данных не равномерно. Тем кому стоит давать в данных на много больше.

Все ключевые признаки, которые были получены изначально были представлены как категориальные: 'education', 
'sex', 'home_address', 'work_address'. Бинарные признаки 'car','car_type', 'foreign_passport', 'good_work'.
Числовые признаки 'age', 'score_bki', 'bki_request_cnt', 'income', 'first_time'. Пропусков в признаках было 
минимально, немного пропусков в признаке 'education', что было легко заполненно. Затем для признаков 'education', 
'sex',  'car', 'car_type', 'foreign_passport' создал get_dummies признаки.

Из признака 'app_date' создал два признака, месяц и день подачи на получение кредита. Признаки 'decline_app_cnt', 
'income', 'bki_request_cnt' почистил от выбросов, что улучшило модель.

Анализ корреляции признаков выделил сдедующии признаки 'score_bki', 'sna', 'decline_app_cnt', 'first_time', 'region_rating',
'home_address', 'bki_request_cnt'. Эти признаки хоть немного коррелировали с целевой переменной. Учитывая что в данных
очень много категориальных и бинарных признаков, стало интересно расмотреть, как по их категориям изменяется соотношение
вернувших и не вернувших. Плюс визуализировал как на этом фоне распределяются по категориям категориальных признаков числовые
признаки 'score_bki', 'age', 'income'. Эта информация дала мысли в каком направление создовать дополнительные признаки.

Самый главный признак в модели я создал после того как признак 'score_bki' решил расмотреть по категориям
['decline_app_cnt', 'bki_request_cnt', 'sna', 'first_time', 'sex_M'] и составить таблицу статистики по этим категориям, 
обнаружилось много категорий с выбросами поэтому решил для каждой категории определить нижний и верхний барьер 'score_bki'.
Затем используя информацию выше созданой таблицы был создан признак 'new_bki_version_work'

Было созданно много дополнительных признаков опираясь на расчет среднего 'score_bki' при разделении данных по разнообразным
категориальным признакам, особенно если эти категориальные признаки хоть не много коррелировали между собой. Также некоторые
признаки были созданы определяя соотношение вернувших и не вернувших кредит при разном распределение по значимым категориальным
признакам.

Для создании модели проверялись только алгоритмы классификации. Стандартизируя признаки модель значительно улучшалась. Вначале была
создана модель используя алгритм LogisticRegression только. Она давала неплохой результат. Затем были протестированы разные алгоритмы
и я решил скомбинировать некоторые алгоритмы с LogisticRegression для этого я использовал VotingClassifier. Не все алгоритмы улучшали
модель, некоторые ухудшали. Алгоритмы которые улучшали модель дополняя LogisticRegression, это LGBMClassifier и CatBoostClassifier.
Но они не одинаковый вес имеют в голосовании за определение клиента в ту или иную категорию. LogisticRegression в этой модели имеет
самый большой вес.
