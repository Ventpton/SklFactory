Цель этого проекта построить модель для предсказания стоимости автомобиля. Тоесть цена
это целевая переменная.Для этого было собранно более 200 тысяч обьявлений на сайте продаж 
автомобилей в начале Августа 2021 года. В конечном итоге модель тестировалась на 36000 обьявлений, 
которые были собраны более года назад. 2020 и 2021 это очень необычные годы из-за пандемии, 
которая повлияла на рынок, включая рынок автомобилей. 

Для сборки данных пришлось парсить используя несколько специальных библиотек для этого.
Так как обьявлений очень много было собранно, чтоб ускорить процесс была написанна программа
использующая threads. Собирались данные не на kaggle.com, а в ide pycharm.

Таблица тестовых данных имела основные признаки (год выпуска, модель, марка, год выпуска модели, 
пробег, размер двигателя, мощность двигателя, цвет, количество дверей, количество владельцев, сторона руля, 
вид кабины, вид топлива, привод) которые были собраны с сайта продаж автомобилей. Эти признаки также были 
собраны для автомобилей на которых модель обучалась. Плюс были собраны дополнительные признаки для обучения и 
для тестовых данных (время разгона до 100 км/ч, количество передач, виды задних и передних тормозов, виды задних и 
передних подвесок. В Собранных данных были пропуски во многих признаках, которые были заполнены. 

Анализ признаков показал, что есть заметная корреляция между числовыми признаками между собой и
с целевой переменной. Все категориальные признаки имели статистически значимые различия по своим
категориям относительно целевой переменной.

Затем было созданно несколько признаков которые улучшали предсказания модели. Средняя
мощности двигателя по нескольким категориальным признакам как модель и обьем двигателя.
Средний пробег по году выпуску. Средний разгон до 100 по количеству передач и обьему двигателя.
Признак соотношения мощности двигателя и разгона до 100. Признак разница между годом выпуска
модели и годом выпуска автомобиля.

Вначале некоторые категориальными признаки которые имели мало категорий были записаны используя
функцию get_dummies, но эта кодеровка создает много дополнительных признаков в модели и она показала
результат похуже чем кодеровка cat.codes. Нормализация всех признаков в модели тоже показала результат
похуже. Логорифмирование целевой переменной повысило точность модели.

Несколько эксперементальных тестирований модели показало, что модель лучше прогнозирует, если
обучение прошо только на автомобилях тех же марок, что и в тестовых данных. Поэтому тренеровачных
данных стало в два раза меньше.

Модель проверялась на нескольких алгоритмах машинного обучения по каждому была проведена работа по
настройке. В тестирование были проверены следующии алгоритмы(CatBoost, RandomForest, GradientBoosting,
XGBoost, LGBMRegressor, Bagging, AdaBoost, Stacking, VotingRegressor. Настройка моделей был использован
GridSearchCV и методом подбора параметров.

Выше уже было указанно, что между тренеровачными данными и тест данными разница больше года. Плюс
это были очень необычные года, которые отразыились на рынках по всему миру. Поэтому в конечном итоге
я умножил предсказания модели на коэффициент, который значительно улучшил результат предсказани модели.




